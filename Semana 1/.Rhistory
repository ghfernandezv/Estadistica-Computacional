for (city in cities){
print(city)
}
# Ejemplo 7 ----
cities <- c("New York","Paris","London", "Tokyo", "Rio de Janeiro","Cape Town")
cities
for (city in cities){
print(city)
}
cities <- c("New York","Paris","London", "Tokyo", "Rio de Janeiro","Cape Town")
cities
for (city in cities){
if(nchar(city)==6){
break
}
print(city)
}
cities <- c("New York","Paris","London", "Tokyo", "Rio de Janeiro","Cape Town")
cities
for (city in cities){
if(nchar(city)==6){
next
}
print(city)
}
runif(x = 20, min=1, max=3 )
runif(20, min=1, max=3 )
runif(1000, min=1, max=3 )
car=NULL
n.muestras=0
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
muest[n.muestras]=cont
} else {
next
}
}
}
car=NULL
n.muestras=0
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
muest[n.muestras]=cont
} else {
next
}
}
}
car=NULL
n.muestras=0
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
car=NULL
n.muestras=0
cont=0
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
car=NULL
n.muestras=0
cont=0
muest=NULL
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
print(muest)
car=NULL
n.muestras=0
cont=0
muest=NULL
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
print(muest)
car=NULL
n.muestras=0
cont=0
muest=NULL
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
print(muest)
car=NULL
n.muestras=0
cont=0
muest=NULL
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
print(muest)
car=NULL
n.muestras=0
cont=0
muest=NULL
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
car[1]
runif(1000, min=1, max=3 )
car[1]=runif(1000, min=1, max=3 )
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras,]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
print(muest)
print(car[1,])
print(car[1,1])
print(car[1])
car=NULL
n.muestras=0
cont=0
muest=NULL
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras,]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
n.muestras=0
n.muestras=n.muestras+1
n.muestras
car[n.muestras,]=runif(1000, min=1, max=3 )
car[n.muestras]=runif(1000, min=1, max=3 )
runif(1000, min=1, max=3 )
car[1]=runif(1000, min=1, max=3 )
car[n.muestras,n]=runif(1000, min=1, max=3 )
n=1000
car[n.muestras,n]=runif(1000, min=1, max=3 )
car=matrix(data=NULL,nrow=20,ncol=1000)
car=matrix(nrow=20,ncol=1000)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=NULL
n=1000
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=NULL
n=1000
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
car[n.muestras]=runif(1000, min=1, max=3 )
car=matrix(nrow=20,ncol=1000)
car[n.muestras]=runif(1000, min=1, max=3 )
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
n=1000
while(n.muestras<=20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (y in car){
if (y>=2.5){
cont=cont+1
} else {
next
}
muest[n.muestras]=cont
}
}
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
n=1000
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
cont <- sum(car[n.muestras, ] >= 2.5)
muest[n.muestras] <- cont
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
n=1000
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
cont <- sum(car[n.muestras, ] >= 2.5)
muest[n.muestras] <- cont
}
print(muest)
runif(1000, min=1, max=3 )
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
cont <- sum(car[n.muestras, ] >= 2.5)
muest[n.muestras] <- cont
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=2.5){
cont <- cont+1
muest[n.muestras] <- cont
}
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=2.5){
cont <- cont+1
muest[n.muestras] <- cont
}
cont=0
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=2.5){
cont <- cont+1
muest[n.muestras] <- cont
}
cont=0
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=2.5){
cont <- cont+1
}
muest[n.muestras] <- cont
cont=0
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=1){
cont <- cont+1
}
muest[n.muestras] <- cont
cont=0
}
print(muest)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=3){
cont <- cont+1
}
muest[n.muestras] <- cont
cont=0
}
print(muest)
car=matrix(nrow=20,ncol=1000)
n.muestras=0
cont=0
muest=numeric(20)
while(n.muestras<20){
n.muestras=n.muestras+1
car[n.muestras, ]=runif(1000, min=1, max=3 )
for (i in 1:1000)
if(car[n.muestras, i]>=2.5){
cont <- cont+1
}
muest[n.muestras] <- cont
cont=0
}
print(muest)
# imprime rcount
---
# funciones ----
#Ejemplo 11 ----
---
# funcion lapply ----
# ejercicio 13
pioneros <- c("GAUSS:1777", "BAYES:1702", "PASCAL:1623", "PEARSON:1857")
suma = function (x,y){
res = x+y
return(res)
}
suma(2,3)
fun = function (n){
runif(n, min=0, max=1)
yos=numeric(n)
x=0
for (i in yos){
if(sum(yos)>=3){
print(yos)
} else {
next
}
}
}
fun(3)
fun = function (n){
x=0
yos=numeric(n)
yos=runif(n, min=0, max=1)
for (i in yos){
if(sum(yos)>=3){
return (yos)
} else {
next
}
}
}
fun(3)
runif(n, min=0, max=1)
nyc=list(pop =84, boro = c('x','y','z'), capital = FALSE)
lapply(nyc,class)
unlist(lapply(nyc,class))
# ejercicio 13
pioneros <- c("GAUSS:1777", "BAYES:1702", "PASCAL:1623", "PEARSON:1857")
unlist(lapply(nyc,class))
sapply(nyc,class)
# Aplicar select primero() sobre los elementos de split low con lapply () y
# asignar el resultado a una nueva variable llamada names.
---
# Realizar el codigo para los a\˜nos
---
# expresiones regulares ----
# ejemplo 15
animales = c('gato','raton','hormiga','oso','tigre')
# Aplicar select primero() sobre los elementos de split low con lapply () y
# asignar el resultado a una nueva variable llamada names.
---
# Realizar el codigo para los a\˜nos
---
# expresiones regulares ----
# ejemplo 15
animales = c('gato','raton','hormiga','oso','tigre')
animales = c('gato','raton','hormiga','oso','tigre')
grepl=(pattern ='a',x=animales)
grepl=(pattern ='a',x = animales)
# Aplicar select primero() sobre los elementos de split low con lapply () y
# asignar el resultado a una nueva variable llamada names.
---
# Realizar el codigo para los a\˜nos
---
# expresiones regulares ----
# ejemplo 15
animales = c('gato','raton','hormiga','oso','tigre')
animales = c('gato','raton','hormiga','oso','tigre')
grepl=(pattern ='a',x = animales)
grepl(pattern ='a',x = animales)
grep(pattern ='a',x = animales)
grepl(pattern ='^o',x = animales)#analiza los que inician con "o"
grepl(pattern ='^o$',x = animales)#analiza los que inician con "o"
animales = c('gato','raton','hormiga','oso','tigre')
grepl(pattern ='^o$',x = animales)#analiza los que terminan con "o"
grepl(pattern ='o$',x = animales)#analiza los que terminan con "o"
sub(patter = 'a', replacement = 'o', x=animales)
sys.date()
# ejercicio 16
# Correos electronicos
emails <- c("john.doe@ivyleague.edu","education@world.gov",
"dalai .lama@peace.org","invalid .edu","quant@bigdatacollege.edu",
"cookie.monster@sesame.tv")
today
today <- Sys.Date()
today
today <- Sys.Date()
class (today)
now <- Sys.time()
class (now)
my_date <- as.Date("1985-01-07")
class (my_date)
my_date <- as.Date("1985-14-07",format="%Y %d %m")
my_time <- as.POSIXct("1985−01−07 11:25:15")
now <- Sys.time()
now

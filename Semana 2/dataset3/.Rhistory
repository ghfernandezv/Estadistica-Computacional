setwd("C:/Users/USUARIO/Documents/GitHub/Estadistica-Computacional/Semana 2/dataset3")
# libreria
library(tidyverse)
sets <- readRDS(file = "sets.rds")
themes <- readRDS(file = "themes.rds")
inventories <- readRDS(file = "inventories.rds")
part_categories <- readRDS(file = "part_categories.rds")
parts <- readRDS(file = "parts.rds")
colors <- readRDS(file = "colors.rds")
inventory_parts <-readRDS(file = "inventory_parts.rds")
clientes <- data.frame(ClienteId = c(1:4),
RazonSocial = c("Cliente 1", "Cliente 2", "Cliente 3", "Cliente 4"))
clientes <- data.frame(ClienteId = c(1:4),
RazonSocial = c("Cliente 1", "Cliente 2", "Cliente 3", "Cliente 4"))
ventas <-  data.frame(ClienteId = c(1, 2, 3, 5),
Monto = c(110, 50, 60, 90))
View(ventas)
View(clientes)
clientes %>%
inner_join(ventas,by="ClienteId")
clientes %>%
left_join(ventas,by="ClienteId")
clientes %>%
right_join(ventas,by="ClienteId")
clientes %>%
full_join(ventas,by="ClienteId")
clientes %>%
semi_join(ventas,by="ClienteId")
clientes %>%
anti_join(ventas,by="ClienteId")
sets <- readRDS(file = "sets.rds")
themes <- readRDS(file = "themes.rds")
inventories <- readRDS(file = "inventories.rds")
part_categories <- readRDS(file = "part_categories.rds")
parts <- readRDS(file = "parts.rds")
colors <- readRDS(file = "colors.rds")
inventory_parts <-readRDS(file = "inventory_parts.rds")
View(themes)
sets %>%
inner_join(themes, by = c("theme_id" = "id"))
sets %>%   inner_join(themes,
by = c("theme_id" = "id"),
suffix = c("_set", "_theme")) %>%
head(n=2)
sets %>%
inner_join(themes, by = c("theme_id" = "id"), suffix = c("_set", "_theme")) %>%
count(name_theme, sort = TRUE) %>%
head(20)
View(part_categories)
View(parts)
parts %>%
# una las columnas adecuadas con el dataset part_categories y cambien .x y .y por c("_part","_category")
inner_join(part_categories, by = c("part_cat_id" = "id"), suffix = c("_part", "_category"))
View(sets)
View(inventories)
View(themes)
sets %>%
inner_join(inventories, by="set_num")
sets %>%
inner_join(inventories, by="set_num") %>%
inner_join(themes, by =c("theme_id"="id"),suffix=c("_set","_theme"))
parts %>%
# una las columnas adecuadas con el dataset part_categories y cambien .x y .y por c("_part","_category")
inner_join(part_categories, by = c("part_cat_id" = "id"), suffix = c("_part", "_category"))
View(inventory_parts)
sets %>%
# Adiciona inventories usando inner join
inner_join(inventories, by="set_num")
sets %>%
# Adiciona inventories usando inner join
inner_join(inventories, by="set_num") %>%
# Adiciona inventory_parts usando an inner join
inner_join(inventory_parts, by=c("id"="inventory_id"))
View(colors)
sets %>%
# Adiciona inventories usando inner join
inner_join(inventories, by="set_num") %>%
# Adiciona inventory_parts usando an inner join
inner_join(inventory_parts, by=c("id"="inventory_id")) %>%
# Adiciona colors usando an inner join y usA suffix = C("_set","_color")
inner_join(inventory_parts, by=c("color_id"="id"), suffix = c("_set", "_color"))
sets %>%
# Adiciona inventories usando inner join
inner_join(inventories, by="set_num") %>%
# Adiciona inventory_parts usando an inner join
inner_join(inventory_parts, by=c("id"="inventory_id")) %>%
# Adiciona colors usando an inner join y usA suffix = C("_set","_color")
inner_join(inventory_parts, by=c("color_id"="id"), suffix = c("_set", "_color"))
sets %>%
# Adiciona inventories usando inner join
inner_join(inventories, by="set_num") %>%
# Adiciona inventory_parts usando an inner join
inner_join(inventory_parts, by=c("id"="inventory_id")) %>%
# Adiciona colors usando an inner join y usA suffix = C("_set","_color")
inner_join(colors, by=c("color_id"="id"), suffix = c("_set", "_color"))
sets %>%
# Adiciona inventories usando inner join
inner_join(inventories, by="set_num") %>%
# Adiciona inventory_parts usando an inner join
inner_join(inventory_parts, by=c("id"="inventory_id")) %>%
# Adiciona colors usando an inner join y usA suffix = C("_set","_color")
inner_join(colors, by=c("color_id"="id"), suffix = c("_set", "_color")) %>%
# Cuente la columna nombre_color y ordene los resultados para que los colores m?s destacados aparezcan primero.
count(name_color, sort=TRUE)
library(tidyverse)
iris
# Ejemplo 1
view(iris)
iris %>%
ggplot(aes(x=Sepal.Length,Sepal.Width))
iris %>%
ggplot(aes(x=Sepal.Length,Sepal.Width))+
geom_point()
iris %>%
ggplot(aes(x=Sepal.Length,Sepal.Width,color=Species))+
geom_point()
iris %>%
ggplot(data = .)+
geom_point(aes(x=Sepal.Length,Sepal.Width,color=Species))
iris %>%
ggplot(data=., aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(size = 2)
iris %>%
ggplot(data=., aes(x = Sepal.Length, y = Sepal.Width,
shape = Species,color=Species)) +
geom_point()
iris %>%
ggplot(data=., aes(x = Sepal.Length, y = Sepal.Width,
shape = Species,color=Species)) +
geom_point() +
theme_bw()
view(mtcars)
mtcars %>%
## a) Mapea mpg en el x y fcyl en el y.
ggplot(aes(x=mpg,fcyl))+
geom_point()
mtcars %>%
## a) Mapea mpg en el x y fcyl en el y.
ggplot(aes(x=mpg,cyl))+
geom_point()
mtcars %>%
## a) Mapea mpg en el x y fcyl en el y.
ggplot(aes(x=mpg, y = factor(cyl)))+
geom_point()
mtcars %>%
ggplot(aes(x=factor(cyl), y = mpg))+
geom_point()
mtcars %>%
ggplot(aes(x=wt, y = mpg,color=factor(cyl)))+
geom_point()
mtcars %>%
ggplot(aes(x=wt, y = mpg, shape = 1 ,color=factor(cyl), ))+
geom_point(size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg, shape = "1" ,color=factor(cyl), ))+
geom_point(size = 4)
geom_point()
mtcars %>%
ggplot(aes(x=wt, y = mpg ,color=factor(cyl)))+
geom_point(shape=1, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl)))+
geom_point(shape=21, alpha= 0.6, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl), label=factor(cyl)))+
geom_point(shape=21, alpha= 0.6, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl)))+
geom_point(shape=21, alpha= 0.6, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl), label=factor(cyl)))+
geom_point(shape=21, alpha= 0.6, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl), label=factor(cyl)))+
geom_text(alpha = 0.6, size = 4)
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl))) +
geom_point() +
geom_text(aes(label = rownames(mtcars)), color = "red", vjust = -0.5)
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl))) +
geom_text(aes(label = rownames(mtcars)), color = "red", vjust = -0.5)
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear), size = hp / wt)) +
geom_point()
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(am), size = hp / wt)) +
geom_point()
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl)))+
geom_point(shape=21, alpha= 0.6, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl), label=factor(cyl)))+
geom_text(alpha = 0.6, size = 4)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl)))+
geom_text(label=factor(cyl))
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl)))+
geom_text(label=factor(cyl))
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl))) +
geom_text(aes(label = rownames(mtcars)), color = "red", vjust = -0.5)
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl))) +  geom_point()+
geom_text(aes(label = rownames(mtcars)), color = "red", vjust = -0.5)
mtcars %>%
ggplot(aes(x=wt, y = mpg ,fill=factor(cyl), label=factor(cyl)))+geom_point()+
geom_text(alpha = 0.6, size = 4)
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl))) +  geom_point()+
geom_text(aes(label = rownames(mtcars)), color = "red", vjust = -0.5)
mtcars %>%
ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(am), size = hp / wt)) +
geom_point()
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "identity")
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "jitter")
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "identity")
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "jitter")
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "jitter")
posn_j <- position_jitter(0.1,seed = 136)
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = position_jitter(0.1,seed = 123))
iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "jitter") +
scale_x_continuous("Sepal Length") +
scale_y_continuous("Sepal Width")+
scale_color_discrete("Species b")
ggplot(iris, aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "jitter") +
scale_x_continuous("Sepal Length",
limits = c(2,8),
breaks = seq(2,8,3)) +
scale_color_discrete("Species")
ggplot(iris, aes(x = Sepal.Length,
y = Sepal.Width,
color = Species)) +
geom_point(position = "jitter") +
scale_x_continuous("Sepal Length",
limits = c(2,8),
breaks = seq(2,8,3),
expand = c(0,0)) +
scale_color_discrete("Species")

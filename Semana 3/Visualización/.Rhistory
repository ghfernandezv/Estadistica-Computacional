geom_point(data = iris.summary, shape = 15, size = 5)
iris %>%
group_by(Species) %>%
summarise_all(mean)
iris %>%
group_by(Species) %>%
summarise_all(mean) -> iris.summary
iris %>%
group_by(Species) %>%
summarise_all(mean) -> iris.summary
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col = Species)) +
geom_point()
iris %>%
group_by(Species) %>%
summarise_all(mean) -> iris.summary
iris.summary
iris %>%
group_by(Species) %>%
summarise_all(mean) -> iris.summary
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col = Species)) +
geom_point() +
# diferentes datos
geom_point(data = iris.summary, shape = 15, size = 5)
iris %>%
group_by(Species) %>%
summarise_all(mean) -> iris.summary
iris.summary
diamonds
# Ejercicio 3 ----
# a)
view(diamonds)
view(diamonds)
diamonds %>%
ggplot(., aes(carat, price, color = clarity))
diamonds %>%
ggplot(., aes(carat, price, color = clarity))+
# adiciona transparencia de 0.5 y shape ="."
geom_point(alpha=0.5, shape = '.')
diamonds %>%
ggplot(., aes(carat, price, color = clarity))+
# adiciona transparencia de 0.5 y shape ="."
geom_point(alpha=0.5, shape = 16)
install.packages("carData")
# Ejercicio 5 ----
library(carData)
Vocab = carData::Vocab
View(Vocab)
Vocab %>%
ggplot(aes(x = education, y = vocabulary))+
geom_point()
# a) Usando Vocab, dibuje education vs vocabulary,adiciona la capa de puntos.
Vocab %>%
ggplot(aes(x = education, y = vocabulary))+
geom_bar()
# a) Usando Vocab, dibuje education vs vocabulary,adiciona la capa de puntos.
Vocab %>%
ggplot(aes(x = education, y = vocabulary))+
geom_point()
Vocab %>%
ggplot(aes(x = education, y = vocabulary))+
# Cambia la capa de puntos a capas jitter
geom_jitter()
Vocab %>%
ggplot(aes(x = education, y = vocabulary))+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2, shape = 1)
Vocab %>%
ggplot(aes(x = education, y = vocabulary), fill = sex)+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2, shape = 1)
Vocab %>%
ggplot(aes(x = education, y = vocabulary, fill = sex))+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2, shape = 1)
Vocab %>%
ggplot(aes(x = education, y = vocabulary, fill = sex))+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2)
Vocab %>%
ggplot(aes(x = education, y = vocabulary, color= sex))+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2
Vocab %>%
Vocab %>%
ggplot(aes(x = education, y = vocabulary, color= sex))+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2)
Vocab %>%
ggplot(aes(x = education, y = vocabulary, color= year))+
# ponle transparencia de 0.2 y shape = 1
geom_jitter(alpha=0.2)
iris %>%
ggplot(., aes(x = Sepal.Width)) +
geom_histogram()
# Ejemplo 2 ----
iris %>%
ggplot(., aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1,center = 0.05)
iris %>%
ggplot(., aes(x = Sepal.Width,fill=Species)) +
geom_histogram(binwidth = 0.1,center = 0.05)
iris %>%
ggplot(., aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1,center = 0.05)
# Ejemplo 2 ----
min(sepal.width)
# Ejemplo 2 ----
min(iris%sepal.width)
# Ejemplo 2 ----
minimo=min(iris$sepal.width)
# Ejemplo 2 ----
minimo=min(iris$Sepal.Width)
minimo
maximo = max(iris$Sepal.Width)
maximo
summarize(iris)
rango = maximo - min
rango = maximo - minimo
rango
count(iris$Sepal.Width)
n = nrow(iris)
k = 3.3*log(10)*n+1
k
k = round(3.3*log(10)*n+1,2)
k
k = round(3.3*log(10)*n+1,1)
k
k = round(3.3*log(10)*n+1,0)
k
amp = rango/k
amp
final = rango+amp
final
print(k)
print(rango)
print(amp)
rango
k
k = round(3.3*log10(n)+1,0)
amp = rango/k
print(k)
print(rango)
print(amp)
k
iris %>%
ggplot(., aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1,center = 0.05)
print(k)
print(rango)
print(amp)
iris %>%
ggplot(., aes(x = Sepal.Width,fill=Species)) +
geom_histogram(binwidth = 0.1,center = 0.05)
iris %>%
ggplot(., aes(x = Sepal.Width,fill=Species)) +
geom_histogram(binwidth = 0.1,
center = 0.05,
position="dodge")
## Realiza un histograma de la frecuencia relativa (..density..)
## de la variable mpg de los datos mtcars
blue1 <- "#51A8C9"
mtcars%>%
ggplot(aes( x = mpg, y = ..density..)) +
# Set the fill color to datacamp_light_blue
geom_histogram(binwidth = 2, fill=blue1 )
mtcars%>%
ggplot(aes(x = mpg, fill = factor(am))) +
# Use la position identity, con transparencia 0.4
geom_histogram(binwidth = 2, position = 'identity', alpha = 0.5)
mtcars%>%
ggplot(aes(x = mpg, fill = factor(am))) +
# Use la position identity, con transparencia 0.4
geom_histogram(binwidth = 2, position = 'identity', alpha = 0.4)
mtcars%>%
ggplot(aes(x = mpg, fill = factor(am))) +
# Use la position identity, con transparencia 0.4
geom_density(binwidth = 2, position = 'identity', alpha = 0.4)
mtcars%>%
ggplot(aes(x = mpg, fill = factor(am))) +
# Use la position identity, con transparencia 0.4
geom_histogram(binwidth = 2, position = 'identity', alpha = 0.4)
library(survival)
diabetic %>%
ggplot(data = ., aes(laser))+
geom_bar()
view(diabetic)
iris %>%
dplyr::select(Species, Sepal.Width) %>%
gather(key="Sepalo", value = "valor", -Species) %>%
dplyr::group_by(Species) %>%
summarise(avg = mean(valor),
stdev = sd(valor)) -> iris_summ
ggplot(iris_summ, aes(x = Species,y = avg)) +
geom_col() +
geom_errorbar(aes(ymin = avg - stdev,
ymax = avg + stdev),
width = 0.1)
iris_summ
ggplot(iris_summ, aes(x = Species,y = avg))
ggplot(iris_summ, aes(x = Species,y = avg)) +
geom_col()
ggplot(iris_summ, aes(x = Species,y = avg)) +
geom_col(color = 'blue')
ggplot(iris_summ, aes(x = Species,y = avg)) +
geom_col(fill = 'blue')
ggplot(iris_summ, aes(x = Species,y = avg)) +
geom_col(fill = 'blue') +
geom_errorbar(aes(ymin = avg - stdev,
ymax = avg + stdev),
width = 0.1)
btcusd <- read_csv("BTC-USD.csv",
col_types = cols(Date = col_date(format = "%Y-%m-%d")))
btcusd <- read_csv("C:/Users/USUARIO/Documents/GitHub/Estadistica-Computacional/Semana 3/VisualizaciÃ³n/BTC-USD.csv",
col_types = cols(Date = col_date(format = "%Y-%m-%d")))
btcusd %>%
ggplot(.,aes(x=Date,y= Close)) +
geom_line()
btcusd %>%
mutate(year = format(Date,"%Y"))%>%
ggplot(.,aes(x=Date,y= Close, color=year)) +
geom_line()
btcusd %>%
mutate(year = format(Date,"%Y"))%>%
ggplot(.,aes(x=Date,y= Close, color=year, fill=year)) +
geom_line()+
geom_area(alpha = 0.3)
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("J","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
btcusd %>%
mutate(year = format(Date,"%Y"))%>%
ggplot(.,aes(x=Date,y= Close, color=year, fill=year)) +
geom_line()+
geom_area(alpha = 0.3)
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=month)) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(aes(x = factor(month, levels = meses), y = Close, fill = factor(year))) +
geom_boxplot()
meses <- c("January","February","March","April","May","June",
"July","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("enero","febrero","marzo","abril","mayo","junio",
"julio","August","September","October","November","December")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
meses <- c("enero","febrero","marzo","abril","mayo","junio",
"julio","agosto","septiembre","octubre","noviembre","diciembre")
btcusd %>%
mutate(month = format(Date,"%B"),
year = format(Date,"%Y"))%>%
ggplot(.,aes(x=factor(month,levels = meses),y= Close, fill=year)) +
geom_boxplot()
iris %>%
ggplot(., aes(x = Sepal.Length)) +
geom_histogram(aes( y = ..density..)) +
geom_rug() +
stat_function(fun = dnorm, color = "red",
args = list(mean = mean(iris$Sepal.Length),
sd = sd(iris$Sepal.Length)))
iris %>%
ggplot(data=., aes(sample = Sepal.Length)) +
stat_qq() +
geom_qq_line(col = "red")
p_4 <- iris %>%
ggplot(data=., aes(x = Sepal.Length,
y = Sepal.Width)) +
geom_jitter(alpha = 0.7) +
scale_color_brewer(palette = "Set1") +
coord_fixed()
p_4
p_4+facet_grid(.~ Species)
#libreria----
library(tidyverse)
# url_dat <-"https://docs.google.com/spreadsheets/d/e/2PACX-1vTxMFXeL7DtF7ie6hEjdQqdNV3-KYtdEyVkZfCtpV0l65X-nLp1dEqEbSkUcG0HJGGuDKyFhslbzfIz/pub?gid=0&single=true&output=tsv"
datos <- read.delim(url_dat)
url_dat <-"https://docs.google.com/spreadsheets/d/e/2PACX-1vTxMFXeL7DtF7ie6hEjdQqdNV3-KYtdEyVkZfCtpV0l65X-nLp1dEqEbSkUcG0HJGGuDKyFhslbzfIz/pub?gid=0&single=true&output=tsv"
datos <- read.delim(url_dat)
datos$Grupo <- factor(datos$Grupo,levels=c("DCLA","DCLNA","Control"))
View(datos)
# estructura de los datos ----
str(datos)
datos %>%
summarise( n = lenght(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), ri = iqr(Edad))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), ri = iqr(Edad))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), ri = IQR(Edad))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
total = datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
total
mutate (Grupo = total)
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>% mutate (total)
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>% mutate (grupo = total)
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
# Edad seg?n los niveles de deterioro----
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>% mutate (Grupo = 'total')
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total')
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total')
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total') %>%  Select (c(prom,mediana))
# Edad ----
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total') %>%  Select(c(prom,mediana))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total')
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total') %>% Select(Grupo, n, prom, ds, mediana, minimo, maximo, ri)
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total') %>% select(Grupo, n, prom, ds, mediana, minimo, maximo, ri)
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%  rbind('total')
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%  rbind(total)
datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total') %>% select(Grupo, n, prom, ds, mediana, minimo, maximo, ri)
resumen = cbind(resumen_grup, resumen_total)
resumen_grup= datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
resumen = cbind(resumen_grup, resumen_total)
resumen = rbind(resumen_grup, resumen_total)
resumen_grup= datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
resumen <- rbind(resumen_grup, resumen_total)
resumen_total = datos %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad)) %>%
mutate (Grupo = 'total') %>% select(Grupo, n, prom, ds, mediana, minimo, maximo, ri)
resumen_total
resumen_grup= datos %>%
group_by(Grupo) %>%
summarise( n = length(Edad), prom = mean(Edad),
ds = sd(Edad),
mediana = median(Edad),
minimo = min(Edad), maximo = max(Edad), ri = IQR(Edad))
resumen_grup
resumen <- rbind(resumen_grup, resumen_total)
resumen
